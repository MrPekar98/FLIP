/* Generated By:JavaCC: Do not edit this line. FlipParserDefaultVisitor.java Version 6.0_1 */
package javacc.generated;

public class FlipParserDefaultVisitor implements FlipParserVisitor{
  public Object defaultVisit(SimpleNode node, Object data){
    node.childrenAccept(this, data);
    return data;
  }
  public Object visit(SimpleNode node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Prog node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Setup node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Stage node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(OrExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(AndExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(NotExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(EqualsExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(CompareExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(TermExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(FactorExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(NegativeExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ArrowExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ValueExpr node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Function node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ReturnStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Block node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(SetupBlock node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PlayerCount node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PileDef node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PlayerDef node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(FunctionBlock node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ActionReturnType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PileCall node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PlayerCall node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(MoveCall node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PlayCall node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(DealCall node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Option node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Statement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(AssignmentStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(DeclarationStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ExpressionStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(GameStateStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(DoneState node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(NextState node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(OutState node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(WinState node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(SkipState node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Declaration node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Assignment node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(IfStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ElseIfStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ElseStatement node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(WhileLoop node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(ForEachLoop node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Modifier node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(MandatoryModifier node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(RepeatModifier node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Comparator node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(TermOperator node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(FactorOperator node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(CurrentPlayer node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Identifier node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(OptionParameter node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Parameter node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Type node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PlayerType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(NumberType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(CardType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(RankType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(SuitType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(SequenceType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(PileType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(BooleanType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(TextType node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Call node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(Literal node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(TextLiteral node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(RankLiteral node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(CardLiteral node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(BooleanLiteral node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(SuitLiteral node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(SequenceLiteral node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(RangeLiteral node, Object data){
    return defaultVisit(node, data);
  }
  public Object visit(NumberLiteral node, Object data){
    return defaultVisit(node, data);
  }
}
/* JavaCC - OriginalChecksum=2bbbc58ff7b22b84483c96aacbf8c3ad (do not edit this line) */
